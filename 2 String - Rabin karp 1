# Rabin karp   Time: O(M + N)
# $ Count Pattern Occurrences in a Large Text
# $$ Question: Given a large string text and a pattern, return the number of occurrences of pattern in text.

def rabin(text, pattern):
    
    d = 256
    q = 101
    m = len(pattern)
    n = len(text)
    p = 0
    t = 0
    h = pow(d, m - 1, q)  
    occurance = []

    for i in range(m):         
        p = (d * p + ord(pattern[i])) % q
        t = (d * t + ord(text[i])) % q
    
    for i in range(n - m + 1):
        if p == t:
            if text[i:i+m] == pattern:
                occurance.append(i)
        if i<n-m:
            t = (d * (t - ord(text[i]) * h) + ord(text[i+m])) % q
            if t<0:
                t += q

    return len(occurance)     


text = "abcdabcabc"
pattern = "abc"
print(rabin(text, pattern))
