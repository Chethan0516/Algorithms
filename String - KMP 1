# $ Substring search
# $$  Question: Given two strings text and pattern, check if pattern is present in text. Return the starting index of the first occurrence of the pattern,
#      or -1 if the pattern is not found.

def kmp(text, pattern):

    if len(pattern) == 0:
        return 0

    def LPS(pattern):

        lps = [0] * len(pattern)
        length, i = 0, 1

        while i<len(pattern):
            if pattern[length] == pattern[i]:
                length += 1
                lps[i] = length
                i += 1
            else:
                if length != 0:
                    length = lps[length - 1]
                else:
                    lps[i] = 0
                    i += 1

        return lps
    
    lps = LPS(pattern)
    i, j =0, 0
    occurance = []

    while j < len(text):
        if pattern[i] == text[j]:
            i += 1
            j += 1
        if i == len(pattern):
            occurance.append(j - i)
            i = lps[i - 1]
        elif j < len(text) and pattern[i] != text[j]:
            if i != 0:
                i = lps[i - 1]
            else:
                j += 1



    return occurance if occurance else -1

text = "abc"
pattern = "abc"
print(kmp(text, pattern))
